// Example that implements push notification from grpc server to client

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.14.0
// source: protos/pushnotif.proto

package protos

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TopicType int32

const (
	TopicType_ALERT TopicType = 0
	TopicType_MODE  TopicType = 1
	TopicType_TEMP  TopicType = 2
)

// Enum value maps for TopicType.
var (
	TopicType_name = map[int32]string{
		0: "ALERT",
		1: "MODE",
		2: "TEMP",
	}
	TopicType_value = map[string]int32{
		"ALERT": 0,
		"MODE":  1,
		"TEMP":  2,
	}
)

func (x TopicType) Enum() *TopicType {
	p := new(TopicType)
	*p = x
	return p
}

func (x TopicType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TopicType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_pushnotif_proto_enumTypes[0].Descriptor()
}

func (TopicType) Type() protoreflect.EnumType {
	return &file_protos_pushnotif_proto_enumTypes[0]
}

func (x TopicType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TopicType.Descriptor instead.
func (TopicType) EnumDescriptor() ([]byte, []int) {
	return file_protos_pushnotif_proto_rawDescGZIP(), []int{0}
}

type Alert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Alerts could be.. check for open doors, temp dropping down too quickly
}

func (x *Alert) Reset() {
	*x = Alert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_pushnotif_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert) ProtoMessage() {}

func (x *Alert) ProtoReflect() protoreflect.Message {
	mi := &file_protos_pushnotif_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert.ProtoReflect.Descriptor instead.
func (*Alert) Descriptor() ([]byte, []int) {
	return file_protos_pushnotif_proto_rawDescGZIP(), []int{0}
}

func (x *Alert) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Mode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewMode string `protobuf:"bytes,1,opt,name=newMode,proto3" json:"newMode,omitempty"` // "heat" or "cold"
}

func (x *Mode) Reset() {
	*x = Mode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_pushnotif_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mode) ProtoMessage() {}

func (x *Mode) ProtoReflect() protoreflect.Message {
	mi := &file_protos_pushnotif_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mode.ProtoReflect.Descriptor instead.
func (*Mode) Descriptor() ([]byte, []int) {
	return file_protos_pushnotif_proto_rawDescGZIP(), []int{1}
}

func (x *Mode) GetNewMode() string {
	if x != nil {
		return x.NewMode
	}
	return ""
}

type Temp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewTemp uint32 `protobuf:"varint,1,opt,name=newTemp,proto3" json:"newTemp,omitempty"` // set the temp
}

func (x *Temp) Reset() {
	*x = Temp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_pushnotif_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Temp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Temp) ProtoMessage() {}

func (x *Temp) ProtoReflect() protoreflect.Message {
	mi := &file_protos_pushnotif_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Temp.ProtoReflect.Descriptor instead.
func (*Temp) Descriptor() ([]byte, []int) {
	return file_protos_pushnotif_proto_rawDescGZIP(), []int{2}
}

func (x *Temp) GetNewTemp() uint32 {
	if x != nil {
		return x.NewTemp
	}
	return 0
}

type RegistrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientName string `protobuf:"bytes,1,opt,name=clientName,proto3" json:"clientName,omitempty"`
}

func (x *RegistrationRequest) Reset() {
	*x = RegistrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_pushnotif_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationRequest) ProtoMessage() {}

func (x *RegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_pushnotif_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationRequest.ProtoReflect.Descriptor instead.
func (*RegistrationRequest) Descriptor() ([]byte, []int) {
	return file_protos_pushnotif_proto_rawDescGZIP(), []int{3}
}

func (x *RegistrationRequest) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

type RegistrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientName string `protobuf:"bytes,1,opt,name=clientName,proto3" json:"clientName,omitempty"`
	ServerName string `protobuf:"bytes,2,opt,name=serverName,proto3" json:"serverName,omitempty"` // uint64 clientCookie = 3; Cookie assigned by the server which is used in further communications
}

func (x *RegistrationResponse) Reset() {
	*x = RegistrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_pushnotif_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationResponse) ProtoMessage() {}

func (x *RegistrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_pushnotif_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationResponse.ProtoReflect.Descriptor instead.
func (*RegistrationResponse) Descriptor() ([]byte, []int) {
	return file_protos_pushnotif_proto_rawDescGZIP(), []int{4}
}

func (x *RegistrationResponse) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *RegistrationResponse) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

type Topic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientName string `protobuf:"bytes,1,opt,name=clientName,proto3" json:"clientName,omitempty"`
	// uint64 clientCookie = 1;
	Type TopicType `protobuf:"varint,2,opt,name=type,proto3,enum=TopicType" json:"type,omitempty"`
}

func (x *Topic) Reset() {
	*x = Topic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_pushnotif_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Topic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Topic) ProtoMessage() {}

func (x *Topic) ProtoReflect() protoreflect.Message {
	mi := &file_protos_pushnotif_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Topic.ProtoReflect.Descriptor instead.
func (*Topic) Descriptor() ([]byte, []int) {
	return file_protos_pushnotif_proto_rawDescGZIP(), []int{5}
}

func (x *Topic) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *Topic) GetType() TopicType {
	if x != nil {
		return x.Type
	}
	return TopicType_ALERT
}

type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientName string    `protobuf:"bytes,1,opt,name=clientName,proto3" json:"clientName,omitempty"`
	ServerName string    `protobuf:"bytes,2,opt,name=serverName,proto3" json:"serverName,omitempty"`
	Type       TopicType `protobuf:"varint,3,opt,name=type,proto3,enum=TopicType" json:"type,omitempty"`
	A          *Alert    `protobuf:"bytes,6,opt,name=a,proto3" json:"a,omitempty"`
	M          *Mode     `protobuf:"bytes,4,opt,name=m,proto3" json:"m,omitempty"`
	T          *Temp     `protobuf:"bytes,5,opt,name=t,proto3" json:"t,omitempty"`
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_pushnotif_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_protos_pushnotif_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_protos_pushnotif_proto_rawDescGZIP(), []int{6}
}

func (x *Notification) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *Notification) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *Notification) GetType() TopicType {
	if x != nil {
		return x.Type
	}
	return TopicType_ALERT
}

func (x *Notification) GetA() *Alert {
	if x != nil {
		return x.A
	}
	return nil
}

func (x *Notification) GetM() *Mode {
	if x != nil {
		return x.M
	}
	return nil
}

func (x *Notification) GetT() *Temp {
	if x != nil {
		return x.T
	}
	return nil
}

var File_protos_pushnotif_proto protoreflect.FileDescriptor

var file_protos_pushnotif_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x75, 0x73, 0x68, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x21, 0x0a, 0x05, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x20, 0x0a, 0x04, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x20, 0x0a,
	0x04, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x54, 0x65, 0x6d, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x22,
	0x35, 0x0a, 0x13, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x56, 0x0a, 0x14, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x47,
	0x0a, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x01, 0x61, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x01, 0x61, 0x12, 0x13,
	0x0a, 0x01, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x01, 0x6d, 0x12, 0x13, 0x0a, 0x01, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05,
	0x2e, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x01, 0x74, 0x2a, 0x2a, 0x0a, 0x09, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x4d, 0x4f, 0x44, 0x45, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45,
	0x4d, 0x50, 0x10, 0x02, 0x32, 0x8e, 0x01, 0x0a, 0x09, 0x70, 0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x12, 0x37, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x14,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x12, 0x06, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x1a, 0x0d, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x30, 0x01, 0x12, 0x26, 0x0a,
	0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x06, 0x2e, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x1a, 0x0d, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x28, 0x01, 0x30, 0x01, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_pushnotif_proto_rawDescOnce sync.Once
	file_protos_pushnotif_proto_rawDescData = file_protos_pushnotif_proto_rawDesc
)

func file_protos_pushnotif_proto_rawDescGZIP() []byte {
	file_protos_pushnotif_proto_rawDescOnce.Do(func() {
		file_protos_pushnotif_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_pushnotif_proto_rawDescData)
	})
	return file_protos_pushnotif_proto_rawDescData
}

var file_protos_pushnotif_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protos_pushnotif_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_protos_pushnotif_proto_goTypes = []interface{}{
	(TopicType)(0),               // 0: topicType
	(*Alert)(nil),                // 1: Alert
	(*Mode)(nil),                 // 2: Mode
	(*Temp)(nil),                 // 3: Temp
	(*RegistrationRequest)(nil),  // 4: RegistrationRequest
	(*RegistrationResponse)(nil), // 5: RegistrationResponse
	(*Topic)(nil),                // 6: Topic
	(*Notification)(nil),         // 7: Notification
}
var file_protos_pushnotif_proto_depIdxs = []int32{
	0, // 0: Topic.type:type_name -> topicType
	0, // 1: Notification.type:type_name -> topicType
	1, // 2: Notification.a:type_name -> Alert
	2, // 3: Notification.m:type_name -> Mode
	3, // 4: Notification.t:type_name -> Temp
	4, // 5: pushNotif.Register:input_type -> RegistrationRequest
	6, // 6: pushNotif.Alert:input_type -> Topic
	6, // 7: pushNotif.Subscribe:input_type -> Topic
	5, // 8: pushNotif.Register:output_type -> RegistrationResponse
	7, // 9: pushNotif.Alert:output_type -> Notification
	7, // 10: pushNotif.Subscribe:output_type -> Notification
	8, // [8:11] is the sub-list for method output_type
	5, // [5:8] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_protos_pushnotif_proto_init() }
func file_protos_pushnotif_proto_init() {
	if File_protos_pushnotif_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_pushnotif_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_pushnotif_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_pushnotif_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Temp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_pushnotif_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_pushnotif_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_pushnotif_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Topic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_pushnotif_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_pushnotif_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_pushnotif_proto_goTypes,
		DependencyIndexes: file_protos_pushnotif_proto_depIdxs,
		EnumInfos:         file_protos_pushnotif_proto_enumTypes,
		MessageInfos:      file_protos_pushnotif_proto_msgTypes,
	}.Build()
	File_protos_pushnotif_proto = out.File
	file_protos_pushnotif_proto_rawDesc = nil
	file_protos_pushnotif_proto_goTypes = nil
	file_protos_pushnotif_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PushNotifClient is the client API for PushNotif service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PushNotifClient interface {
	Register(ctx context.Context, in *RegistrationRequest, opts ...grpc.CallOption) (*RegistrationResponse, error)
	Alert(ctx context.Context, in *Topic, opts ...grpc.CallOption) (PushNotif_AlertClient, error)
	Subscribe(ctx context.Context, opts ...grpc.CallOption) (PushNotif_SubscribeClient, error)
}

type pushNotifClient struct {
	cc grpc.ClientConnInterface
}

func NewPushNotifClient(cc grpc.ClientConnInterface) PushNotifClient {
	return &pushNotifClient{cc}
}

func (c *pushNotifClient) Register(ctx context.Context, in *RegistrationRequest, opts ...grpc.CallOption) (*RegistrationResponse, error) {
	out := new(RegistrationResponse)
	err := c.cc.Invoke(ctx, "/pushNotif/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushNotifClient) Alert(ctx context.Context, in *Topic, opts ...grpc.CallOption) (PushNotif_AlertClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PushNotif_serviceDesc.Streams[0], "/pushNotif/Alert", opts...)
	if err != nil {
		return nil, err
	}
	x := &pushNotifAlertClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PushNotif_AlertClient interface {
	Recv() (*Notification, error)
	grpc.ClientStream
}

type pushNotifAlertClient struct {
	grpc.ClientStream
}

func (x *pushNotifAlertClient) Recv() (*Notification, error) {
	m := new(Notification)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *pushNotifClient) Subscribe(ctx context.Context, opts ...grpc.CallOption) (PushNotif_SubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PushNotif_serviceDesc.Streams[1], "/pushNotif/Subscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &pushNotifSubscribeClient{stream}
	return x, nil
}

type PushNotif_SubscribeClient interface {
	Send(*Topic) error
	Recv() (*Notification, error)
	grpc.ClientStream
}

type pushNotifSubscribeClient struct {
	grpc.ClientStream
}

func (x *pushNotifSubscribeClient) Send(m *Topic) error {
	return x.ClientStream.SendMsg(m)
}

func (x *pushNotifSubscribeClient) Recv() (*Notification, error) {
	m := new(Notification)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PushNotifServer is the server API for PushNotif service.
type PushNotifServer interface {
	Register(context.Context, *RegistrationRequest) (*RegistrationResponse, error)
	Alert(*Topic, PushNotif_AlertServer) error
	Subscribe(PushNotif_SubscribeServer) error
}

// UnimplementedPushNotifServer can be embedded to have forward compatible implementations.
type UnimplementedPushNotifServer struct {
}

func (*UnimplementedPushNotifServer) Register(context.Context, *RegistrationRequest) (*RegistrationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedPushNotifServer) Alert(*Topic, PushNotif_AlertServer) error {
	return status.Errorf(codes.Unimplemented, "method Alert not implemented")
}
func (*UnimplementedPushNotifServer) Subscribe(PushNotif_SubscribeServer) error {
	return status.Errorf(codes.Unimplemented, "method Subscribe not implemented")
}

func RegisterPushNotifServer(s *grpc.Server, srv PushNotifServer) {
	s.RegisterService(&_PushNotif_serviceDesc, srv)
}

func _PushNotif_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegistrationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushNotifServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pushNotif/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushNotifServer).Register(ctx, req.(*RegistrationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushNotif_Alert_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Topic)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PushNotifServer).Alert(m, &pushNotifAlertServer{stream})
}

type PushNotif_AlertServer interface {
	Send(*Notification) error
	grpc.ServerStream
}

type pushNotifAlertServer struct {
	grpc.ServerStream
}

func (x *pushNotifAlertServer) Send(m *Notification) error {
	return x.ServerStream.SendMsg(m)
}

func _PushNotif_Subscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PushNotifServer).Subscribe(&pushNotifSubscribeServer{stream})
}

type PushNotif_SubscribeServer interface {
	Send(*Notification) error
	Recv() (*Topic, error)
	grpc.ServerStream
}

type pushNotifSubscribeServer struct {
	grpc.ServerStream
}

func (x *pushNotifSubscribeServer) Send(m *Notification) error {
	return x.ServerStream.SendMsg(m)
}

func (x *pushNotifSubscribeServer) Recv() (*Topic, error) {
	m := new(Topic)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _PushNotif_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pushNotif",
	HandlerType: (*PushNotifServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _PushNotif_Register_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Alert",
			Handler:       _PushNotif_Alert_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Subscribe",
			Handler:       _PushNotif_Subscribe_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "protos/pushnotif.proto",
}
